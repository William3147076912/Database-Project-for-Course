<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qwq.enrollment.mapper.CourseEnrollmentMapper">
    
    <resultMap type="CourseEnrollment" id="CourseEnrollmentResult">
        <result property="enrollmentId"    column="enrollment_id"    />
        <result property="studentId"    column="student_id"    />
        <result property="courseId"    column="course_id"    />
        <result property="enrollmentTime"    column="enrollment_time"    />
        <result property="status"    column="status"    />
        <result property="completionTime"    column="completion_time"    />
    </resultMap>

    <sql id="selectCourseEnrollmentVo">
        select enrollment_id, student_id, course_id, enrollment_time, status, completion_time from course_enrollment
    </sql>

    <select id="selectCourseEnrollmentList" parameterType="CourseEnrollment" resultMap="CourseEnrollmentResult">
        <include refid="selectCourseEnrollmentVo"/>
        <where>  
            <if test="studentId != null "> and student_id = #{studentId}</if>
            <if test="courseId != null "> and course_id = #{courseId}</if>
            <if test="enrollmentTime != null "> and enrollment_time = #{enrollmentTime}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="completionTime != null "> and completion_time = #{completionTime}</if>
        </where>
    </select>
    
    <select id="selectCourseEnrollmentByEnrollmentId" parameterType="Long" resultMap="CourseEnrollmentResult">
        <include refid="selectCourseEnrollmentVo"/>
        where enrollment_id = #{enrollmentId}
    </select>

    <insert id="insertCourseEnrollment" parameterType="CourseEnrollment" useGeneratedKeys="true" keyProperty="enrollmentId">
        insert into course_enrollment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="studentId != null">student_id,</if>
            <if test="courseId != null">course_id,</if>
            <if test="enrollmentTime != null">enrollment_time,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="completionTime != null">completion_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="studentId != null">#{studentId},</if>
            <if test="courseId != null">#{courseId},</if>
            <if test="enrollmentTime != null">#{enrollmentTime},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="completionTime != null">#{completionTime},</if>
         </trim>
    </insert>

    <update id="updateCourseEnrollment" parameterType="CourseEnrollment">
        update course_enrollment
        <trim prefix="SET" suffixOverrides=",">
            <if test="studentId != null">student_id = #{studentId},</if>
            <if test="courseId != null">course_id = #{courseId},</if>
            <if test="enrollmentTime != null">enrollment_time = #{enrollmentTime},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="completionTime != null">completion_time = #{completionTime},</if>
        </trim>
        where enrollment_id = #{enrollmentId}
    </update>

    <delete id="deleteCourseEnrollmentByEnrollmentId" parameterType="Long">
        delete from course_enrollment where enrollment_id = #{enrollmentId}
    </delete>

    <delete id="deleteCourseEnrollmentByEnrollmentIds" parameterType="String">
        delete from course_enrollment where enrollment_id in 
        <foreach item="enrollmentId" collection="array" open="(" separator="," close=")">
            #{enrollmentId}
        </foreach>
    </delete>
</mapper>